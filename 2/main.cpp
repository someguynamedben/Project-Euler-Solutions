/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */

#include <iostream>

const long MAX_FIB = 4000000;

long calcFib(long firstNum, long secondNum, long total, long answer){
    while(total < MAX_FIB){
        total = firstNum + secondNum;
        firstNum = secondNum;
        secondNum = total;

        if(secondNum % 2 == 0){
            answer += secondNum;
        }
    }

    return answer;
}

int main() {
    long firstNum = 1;
    long secondNum = 2;
    long total = 0;
    long answer = 2;

    answer = calcFib(firstNum, secondNum, total, answer);

    std::cout << "Answer is: " << answer << std::endl;

    return 0;
}